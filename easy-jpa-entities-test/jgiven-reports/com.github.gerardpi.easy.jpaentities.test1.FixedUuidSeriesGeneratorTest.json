{
  "className": "com.github.gerardpi.easy.jpaentities.test1.FixedUuidSeriesGeneratorTest",
  "name": "Fixed Uuid Series Generator",
  "scenarios": [
    {
      "className": "com.github.gerardpi.easy.jpaentities.test1.FixedUuidSeriesGeneratorTest",
      "testMethodName": "test",
      "description": "Test",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "generating $ UUIDs",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "generating"
                },
                {
                  "value": "10",
                  "argumentInfo": {
                    "argumentName": "count",
                    "formattedValue": "10"
                  }
                },
                {
                  "value": "UUIDs"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 11209274
            },
            {
              "name": "the width of the index part is $ in the zero based series of $ UUIDs that was created",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "the width of the index part is"
                },
                {
                  "value": "8",
                  "argumentInfo": {
                    "argumentName": "indexStringWidth",
                    "formattedValue": "8"
                  }
                },
                {
                  "value": "in the zero based series of"
                },
                {
                  "value": "10",
                  "argumentInfo": {
                    "argumentName": "untilIndex",
                    "formattedValue": "10"
                  }
                },
                {
                  "value": "UUIDs that was created"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 48328334
            }
          ],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "SUCCESS",
          "durationInNanos": 90063656
        }
      ],
      "durationInNanos": 90063656,
      "executionStatus": "SUCCESS"
    },
    {
      "className": "com.github.gerardpi.easy.jpaentities.test1.FixedUuidSeriesGeneratorTest",
      "testMethodName": "test_generated_UUID_has_expected_value",
      "description": "test generated UUID has expected value",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "generating $ UUIDs",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "generating"
                },
                {
                  "value": "3",
                  "argumentInfo": {
                    "argumentName": "count",
                    "formattedValue": "3"
                  }
                },
                {
                  "value": "UUIDs"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 1530133
            },
            {
              "name": "the UUID at index $n is $",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "the UUID at index"
                },
                {
                  "value": "0",
                  "argumentInfo": {
                    "argumentName": "uuidIndex",
                    "formattedValue": "0"
                  }
                },
                {
                  "value": "is"
                },
                {
                  "value": "00000000-1111-2222-3333-444444444444",
                  "argumentInfo": {
                    "argumentName": "expectedUuidAsString",
                    "formattedValue": "00000000-1111-2222-3333-444444444444"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 1211266
            },
            {
              "name": "the UUID at index $n is $",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "the UUID at index"
                },
                {
                  "value": "1",
                  "argumentInfo": {
                    "argumentName": "uuidIndex",
                    "formattedValue": "1"
                  }
                },
                {
                  "value": "is"
                },
                {
                  "value": "00000001-1111-2222-3333-444444444444",
                  "argumentInfo": {
                    "argumentName": "expectedUuidAsString",
                    "formattedValue": "00000001-1111-2222-3333-444444444444"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 1104002
            },
            {
              "name": "the UUID at index $n is $",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "the UUID at index"
                },
                {
                  "value": "2",
                  "argumentInfo": {
                    "argumentName": "uuidIndex",
                    "formattedValue": "2"
                  }
                },
                {
                  "value": "is"
                },
                {
                  "value": "00000002-1111-2222-3333-444444444444",
                  "argumentInfo": {
                    "argumentName": "expectedUuidAsString",
                    "formattedValue": "00000002-1111-2222-3333-444444444444"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 1072800
            }
          ],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "SUCCESS",
          "durationInNanos": 6064807
        }
      ],
      "durationInNanos": 6064807,
      "executionStatus": "SUCCESS"
    },
    {
      "className": "com.github.gerardpi.easy.jpaentities.test1.FixedUuidSeriesGeneratorTest",
      "testMethodName": "test_match",
      "description": "test match",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "generating $ UUIDs",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "generating"
                },
                {
                  "value": "2",
                  "argumentInfo": {
                    "argumentName": "count",
                    "formattedValue": "2"
                  }
                },
                {
                  "value": "UUIDs"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 1293132
            },
            {
              "name": "matching UUID $ with $ $",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "matching UUID"
                },
                {
                  "value": "0",
                  "argumentInfo": {
                    "argumentName": "index1",
                    "formattedValue": "0"
                  }
                },
                {
                  "value": "with"
                },
                {
                  "value": "0",
                  "argumentInfo": {
                    "argumentName": "index2",
                    "formattedValue": "0"
                  }
                },
                {
                  "value": "is equal",
                  "argumentInfo": {
                    "argumentName": "isOrIsNotEqual",
                    "formattedValue": "is equal"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 8781824
            },
            {
              "name": "matching UUID $ with $ $",
              "words": [
                {
                  "value": "but",
                  "isIntroWord": true
                },
                {
                  "value": "matching UUID"
                },
                {
                  "value": "0",
                  "argumentInfo": {
                    "argumentName": "index1",
                    "formattedValue": "0"
                  }
                },
                {
                  "value": "with"
                },
                {
                  "value": "1",
                  "argumentInfo": {
                    "argumentName": "index2",
                    "formattedValue": "1"
                  }
                },
                {
                  "value": "is not equal",
                  "argumentInfo": {
                    "argumentName": "isOrIsNotEqual",
                    "formattedValue": "is not equal"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 1150084
            }
          ],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "SUCCESS",
          "durationInNanos": 14422072
        }
      ],
      "durationInNanos": 14422072,
      "executionStatus": "SUCCESS"
    }
  ],
  "tagMap": {}
}